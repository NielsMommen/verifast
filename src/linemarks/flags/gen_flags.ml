module C = Configurator.V1
open Platform

(*
  -fno-unwind-tables
    Keep Cocoa from stack-walking into OCaml frames and crashing.
    See OCaml bug 7118 <http://caml.inria.fr/mantis/view.php?id=7118>
    See LablGtk bug 1518 <https://forge.ocamlcore.org/tracker/index.php?func=detail&aid=1518&group_id=220&atid=1032>
    See VeriFast bug 1975 <https://dnetcode.cs.kuleuven.be/issues/1975>
  
  -Wno-incompatible-pointer-types-discards-qualifiers
    C code generated by 'valac' disregards C type qualifiers
*)
let get_sys_cflags = function
  | Linux -> ["-Wno-discarded-qualifiers"]
  | MacOS -> ["-Wno-incompatible-pointer-types-discards-qualifiers"; "-fno-unwind-tables"]
  | _  -> []

let get_gtksourceview_pkg_conf c =
  let pkg_config_opt = C.Pkg_config.get c in
  match pkg_config_opt with
  | None -> 
    C.die "'pkg-config' not found."
  | Some pkg_conf ->
    let gtksourceview_conf_opt = C.Pkg_config.query pkg_conf ~package:"gtksourceview-2.0" in
    match gtksourceview_conf_opt with 
    | None -> 
      C.die "gtksourceview-2.0 was not found using 'pkg-config'."
    | Some conf ->
      conf

let () =
  C.main ~args:[] ~name:"linemarks_flags" @@ fun c ->
    let plat = C.ocaml_config_var_exn c "system" |> platform_of_system_string in
    let cflags, lflags = 
      match plat with
      | Windows -> [], []
      | _ ->
        let cflags = get_sys_cflags plat in
        let gtk_conf = get_gtksourceview_pkg_conf c in
        gtk_conf.cflags @ cflags, gtk_conf.libs
    in
    C.Flags.write_sexp "cflags.sexp" cflags;
    C.Flags.write_sexp "lflags.sexp" lflags;