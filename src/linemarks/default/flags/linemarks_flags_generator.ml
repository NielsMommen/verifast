module C = Configurator.V1
open Vfconfig

(*
  -fno-unwind-tables
    Keep Cocoa from stack-walking into OCaml frames and crashing.
    See OCaml bug 7118 <http://caml.inria.fr/mantis/view.php?id=7118>
    See LablGtk bug 1518 <https://forge.ocamlcore.org/tracker/index.php?func=detail&aid=1518&group_id=220&atid=1032>
    See VeriFast bug 1975 <https://dnetcode.cs.kuleuven.be/issues/1975>
  
  -Wno-incompatible-pointer-types-discards-qualifiers
    C code generated by 'valac' disregards C type qualifiers
*)
let get_sys_cflags = function
  | Linux -> [ "-Wno-discarded-qualifiers" ]
  | MacOS ->
      [
        "-Wno-incompatible-pointer-types-discards-qualifiers";
        "-fno-unwind-tables";
      ]
  | _ -> []

let get_gtksourceview_pkg_conf c =
  match C.Pkg_config.get c with
  | None -> C.die "Could not find 'pkg-config'."
  | Some pkg_conf -> (
      match C.Pkg_config.query pkg_conf ~package:"gtksourceview-2.0" with
      | Some pkg_conf -> pkg_conf
      | _ -> C.die "'gtksourceview-2.0' was not found using 'pkg-config'.")

let () =
  C.main ~args:[] ~name:"linemarks_flags_generator" @@ fun c ->
  let cflags, lflags =
    let cflags = get_sys_cflags platform in
    let gtk_conf = get_gtksourceview_pkg_conf c in
    (gtk_conf.cflags @ cflags, gtk_conf.libs)
  in
  C.Flags.write_sexp "linemarks_cflags.sexp" cflags;
  C.Flags.write_sexp "linemarks_lflags.sexp" lflags