// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: stubs_ast.capnp

#include "stubs_ast.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_b1436df23fb200b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  76, 111,  99,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    160,  73, 192, 163, 245,  62, 188, 128,
      1,   0,   0,   0,  58,   0,   0,   0,
     83, 114,  99,  80, 111, 115,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    160,  73, 192, 163, 245,  62, 188, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    160,  73, 192, 163, 245,  62, 188, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1436df23fb200b4 = b_b1436df23fb200b4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1436df23fb200b4[] = {
  &s_80bc3ef5a3c049a0,
};
static const uint16_t m_b1436df23fb200b4[] = {1, 0};
static const uint16_t i_b1436df23fb200b4[] = {0, 1};
const ::capnp::_::RawSchema s_b1436df23fb200b4 = {
  0xb1436df23fb200b4, b_b1436df23fb200b4.words, 52, d_b1436df23fb200b4, m_b1436df23fb200b4,
  1, 2, i_b1436df23fb200b4, nullptr, nullptr, { &s_b1436df23fb200b4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_80bc3ef5a3c049a0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160,  73, 192, 163, 245,  62, 188, 128,
     39,   0,   0,   0,   1,   0,   1,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  76, 111,  99,  46,  83,
    114,  99,  80, 111, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    108,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 100,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80bc3ef5a3c049a0 = b_80bc3ef5a3c049a0.words;
#if !CAPNP_LITE
static const uint16_t m_80bc3ef5a3c049a0[] = {1, 2, 0};
static const uint16_t i_80bc3ef5a3c049a0[] = {0, 1, 2};
const ::capnp::_::RawSchema s_80bc3ef5a3c049a0 = {
  0x80bc3ef5a3c049a0, b_80bc3ef5a3c049a0.words, 65, nullptr, m_80bc3ef5a3c049a0,
  0, 3, i_80bc3ef5a3c049a0, nullptr, nullptr, { &s_80bc3ef5a3c049a0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_e2a8b78aa50d684a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  15,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  42,   0,   0,   0,
     66,  97, 115, 101,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e2a8b78aa50d684a = b_e2a8b78aa50d684a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e2a8b78aa50d684a[] = {
  &s_b1436df23fb200b4,
};
static const uint16_t m_e2a8b78aa50d684a[] = {1, 0};
static const uint16_t i_e2a8b78aa50d684a[] = {0, 1};
const ::capnp::_::RawSchema s_e2a8b78aa50d684a = {
  0xe2a8b78aa50d684a, b_e2a8b78aa50d684a.words, 52, d_e2a8b78aa50d684a, m_e2a8b78aa50d684a,
  1, 2, i_e2a8b78aa50d684a, nullptr, nullptr, { &s_e2a8b78aa50d684a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_adb9aafdab430c1d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  67, 108,  97, 117, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adb9aafdab430c1d = b_adb9aafdab430c1d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adb9aafdab430c1d[] = {
  &s_b1436df23fb200b4,
};
static const uint16_t m_adb9aafdab430c1d[] = {0, 1};
static const uint16_t i_adb9aafdab430c1d[] = {0, 1};
const ::capnp::_::RawSchema s_adb9aafdab430c1d = {
  0xadb9aafdab430c1d, b_adb9aafdab430c1d.words, 50, d_adb9aafdab430c1d, m_adb9aafdab430c1d,
  1, 2, i_adb9aafdab430c1d, nullptr, nullptr, { &s_adb9aafdab430c1d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_b32068af6baf8c74 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 140, 175, 107, 175, 104,  32, 179,
     35,   0,   0,   0,   2,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  82, 101,  99, 111, 114,
    100,  75, 105, 110, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 117,  99,   0,   0,   0,
     99, 108,  97, 115, 115,   0,   0,   0,
    117, 110, 105, 111,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b32068af6baf8c74 = b_b32068af6baf8c74.words;
#if !CAPNP_LITE
static const uint16_t m_b32068af6baf8c74[] = {1, 0, 2};
const ::capnp::_::RawSchema s_b32068af6baf8c74 = {
  0xb32068af6baf8c74, b_b32068af6baf8c74.words, 32, nullptr, m_b32068af6baf8c74,
  0, 3, nullptr, nullptr, nullptr, { &s_b32068af6baf8c74, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(RecordKind_b32068af6baf8c74, b32068af6baf8c74);
static const ::capnp::_::AlignedData<50> b_ec96558d3909990f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 153,   9,  57, 141,  85, 150, 236,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  82, 101,  99, 111, 114,
    100,  82, 101, 102,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    116, 140, 175, 107, 175, 104,  32, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec96558d3909990f = b_ec96558d3909990f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ec96558d3909990f[] = {
  &s_b32068af6baf8c74,
};
static const uint16_t m_ec96558d3909990f[] = {1, 0};
static const uint16_t i_ec96558d3909990f[] = {0, 1};
const ::capnp::_::RawSchema s_ec96558d3909990f = {
  0xec96558d3909990f, b_ec96558d3909990f.words, 50, d_ec96558d3909990f, m_ec96558d3909990f,
  1, 2, i_ec96558d3909990f, nullptr, nullptr, { &s_ec96558d3909990f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<89> b_ab35d5180cf244f1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    241,  68, 242,  12,  24, 213,  53, 171,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  80,  97, 114,  97, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  97, 117, 108, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab35d5180cf244f1 = b_ab35d5180cf244f1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ab35d5180cf244f1[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ab35d5180cf244f1[] = {2, 1, 0};
static const uint16_t i_ab35d5180cf244f1[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ab35d5180cf244f1[] = {
  { 16777216,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
  { 16777218,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ab35d5180cf244f1 = {
  0xab35d5180cf244f1, b_ab35d5180cf244f1.words, 89, d_ab35d5180cf244f1, m_ab35d5180cf244f1,
  1, 3, i_ab35d5180cf244f1, nullptr, nullptr, { &s_ab35d5180cf244f1, nullptr, bd_ab35d5180cf244f1, 0, sizeof(bd_ab35d5180cf244f1) / sizeof(bd_ab35d5180cf244f1[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<281> b_f4d8929c89991d82 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,  12,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 167,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
     45,  58,  68, 142, 202, 105,  85, 165,
     17,   0,   0,   0,  98,   0,   0,   0,
     32, 137, 129,  39,  75, 141, 244, 144,
     17,   0,   0,   0,  90,   0,   0,   0,
    220, 115,  14, 126,  67,  30,  63, 250,
     17,   0,   0,   0, 114,   0,   0,   0,
     66, 117, 105, 108, 116, 105, 110,  75,
    105, 110, 100,   0,   0,   0,   0,   0,
     70, 105, 120, 101, 100,  87, 105, 100,
    116, 104,   0,   0,   0,   0,   0,   0,
     70, 117, 110,  99, 116, 105, 111, 110,
     80, 114, 111, 116, 111,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
     84,   1,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
    136,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   2,   0,   0,   3,   0,   1,   0,
     68,   2,   0,   0,   2,   0,   1,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   2,   0,   0,   3,   0,   1,   0,
     72,   2,   0,   0,   2,   0,   1,   0,
     10,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   2,   0,   0,   3,   0,   1,   0,
     80,   2,   0,   0,   2,   0,   1,   0,
     11,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   2,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   2,   0,   0,   3,   0,   1,   0,
    140,   2,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 111, 110,  78, 111, 116,
     73, 110, 105, 116, 105,  97, 108, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 105, 108, 116, 105, 110,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     45,  58,  68, 142, 202, 105,  85, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116, 101, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 111, 114, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     15, 153,   9,  57, 141,  85, 150, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 117, 109,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  86,  97, 108, 117, 101,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  86,  97, 108, 117, 101,  82, 101,
    102,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 120, 101, 100,  87, 105, 100,
    116, 104,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     32, 137, 129,  39,  75, 141, 244, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108,  97,  98, 111, 114,  97, 116,
    101, 100,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101, 100, 101, 102,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99, 116, 105, 111, 110,
     80, 114, 111, 116, 111,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    220, 115,  14, 126,  67,  30,  63, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98, 115, 116,  84, 101, 109,
    112, 108,  97, 116, 101,  84, 121, 112,
    101,  80,  97, 114,  97, 109,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4d8929c89991d82 = b_f4d8929c89991d82.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f4d8929c89991d82[] = {
  &s_90f48d4b27818920,
  &s_a55569ca8e443a2d,
  &s_e2a8b78aa50d684a,
  &s_ec96558d3909990f,
  &s_fa3f1e437e0e73dc,
};
static const uint16_t m_f4d8929c89991d82[] = {1, 8, 4, 7, 10, 5, 2, 6, 3, 11, 9, 0};
static const uint16_t i_f4d8929c89991d82[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f4d8929c89991d82[] = {
  { 16777218,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
  { 16777221,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
  { 16777222,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
  { 16777224,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
  { 16777227,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f4d8929c89991d82 = {
  0xf4d8929c89991d82, b_f4d8929c89991d82.words, 281, d_f4d8929c89991d82, m_f4d8929c89991d82,
  5, 12, i_f4d8929c89991d82, nullptr, nullptr, { &s_f4d8929c89991d82, nullptr, bd_f4d8929c89991d82, 0, sizeof(bd_f4d8929c89991d82) / sizeof(bd_f4d8929c89991d82[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<71> b_a55569ca8e443a2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45,  58,  68, 142, 202, 105,  85, 165,
     40,   0,   0,   0,   2,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  39,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84, 121, 112, 101,  46,
     66, 117, 105, 108, 116, 105, 110,  75,
    105, 110, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 114,   0,   0,   0,   0,
    117,  67, 104,  97, 114,   0,   0,   0,
    115, 104, 111, 114, 116,   0,   0,   0,
    117,  83, 104, 111, 114, 116,   0,   0,
    118, 111, 105, 100,   0,   0,   0,   0,
     98, 111, 111, 108,   0,   0,   0,   0,
    105, 110, 116,   0,   0,   0,   0,   0,
    117,  73, 110, 116,   0,   0,   0,   0,
    108, 111, 110, 103,   0,   0,   0,   0,
    117,  76, 111, 110, 103,   0,   0,   0,
    108, 111, 110, 103,  76, 111, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,  76, 111, 110, 103,  76, 111, 110,
    103,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a55569ca8e443a2d = b_a55569ca8e443a2d.words;
#if !CAPNP_LITE
static const uint16_t m_a55569ca8e443a2d[] = {5, 0, 6, 8, 10, 2, 1, 7, 9, 11, 3, 4};
const ::capnp::_::RawSchema s_a55569ca8e443a2d = {
  0xa55569ca8e443a2d, b_a55569ca8e443a2d.words, 71, nullptr, m_a55569ca8e443a2d,
  0, 12, nullptr, nullptr, nullptr, { &s_a55569ca8e443a2d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BuiltinKind_a55569ca8e443a2d, a55569ca8e443a2d);
static const ::capnp::_::AlignedData<55> b_90f48d4b27818920 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     32, 137, 129,  39,  75, 141, 244, 144,
     40,   0,   0,   0,   1,   0,   1,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84, 121, 112, 101,  46,
     70, 105, 120, 101, 100,  87, 105, 100,
    116, 104,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     83, 219,  46, 225,   8, 117,  23, 202,
      1,   0,   0,   0, 122,   0,   0,   0,
     70, 105, 120, 101, 100,  87, 105, 100,
    116, 104,  75, 105, 110, 100,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     83, 219,  46, 225,   8, 117,  23, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 116, 115,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_90f48d4b27818920 = b_90f48d4b27818920.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_90f48d4b27818920[] = {
  &s_ca177508e12edb53,
};
static const uint16_t m_90f48d4b27818920[] = {1, 0};
static const uint16_t i_90f48d4b27818920[] = {0, 1};
const ::capnp::_::RawSchema s_90f48d4b27818920 = {
  0x90f48d4b27818920, b_90f48d4b27818920.words, 55, d_90f48d4b27818920, m_90f48d4b27818920,
  1, 2, i_90f48d4b27818920, nullptr, nullptr, { &s_90f48d4b27818920, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_ca177508e12edb53 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83, 219,  46, 225,   8, 117,  23, 202,
     51,   0,   0,   0,   2,   0,   0,   0,
     32, 137, 129,  39,  75, 141, 244, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84, 121, 112, 101,  46,
     70, 105, 120, 101, 100,  87, 105, 100,
    116, 104,  46,  70, 105, 120, 101, 100,
     87, 105, 100, 116, 104,  75, 105, 110,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,   0,   0,   0,   0,   0,
    117,  73, 110, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca177508e12edb53 = b_ca177508e12edb53.words;
#if !CAPNP_LITE
static const uint16_t m_ca177508e12edb53[] = {0, 1};
const ::capnp::_::RawSchema s_ca177508e12edb53 = {
  0xca177508e12edb53, b_ca177508e12edb53.words, 31, nullptr, m_ca177508e12edb53,
  0, 2, nullptr, nullptr, nullptr, { &s_ca177508e12edb53, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(FixedWidthKind_ca177508e12edb53, ca177508e12edb53);
static const ::capnp::_::AlignedData<108> b_fa3f1e437e0e73dc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    220, 115,  14, 126,  67,  30,  63, 250,
     40,   0,   0,   0,   1,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84, 121, 112, 101,  46,
     70, 117, 110,  99, 116, 105, 111, 110,
     80, 114, 111, 116, 111,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 116, 117, 114, 110,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 104, 111, 115, 116,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    241,  68, 242,  12,  24, 213,  53, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fa3f1e437e0e73dc = b_fa3f1e437e0e73dc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fa3f1e437e0e73dc[] = {
  &s_ab35d5180cf244f1,
  &s_adb9aafdab430c1d,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_fa3f1e437e0e73dc[] = {3, 1, 2, 0};
static const uint16_t i_fa3f1e437e0e73dc[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_fa3f1e437e0e73dc[] = {
  { 16777216,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_fa3f1e437e0e73dc = {
  0xfa3f1e437e0e73dc, b_fa3f1e437e0e73dc.words, 108, d_fa3f1e437e0e73dc, m_fa3f1e437e0e73dc,
  3, 4, i_fa3f1e437e0e73dc, nullptr, nullptr, { &s_fa3f1e437e0e73dc, nullptr, bd_fa3f1e437e0e73dc, 0, sizeof(bd_fa3f1e437e0e73dc) / sizeof(bd_fa3f1e437e0e73dc[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<298> b_f6a0f771ad50816c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,  15,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,   0,
     28,   0,   0,   0,   1,   0,   1,   0,
    132, 139, 242,  58, 142, 245, 122, 254,
     49,   0,   0,   0,  58,   0,   0,   0,
    117, 129,   8,   1, 144, 149, 239, 191,
     45,   0,   0,   0,  26,   0,   0,   0,
    206, 185, 167, 149, 130, 134, 155, 137,
     41,   0,   0,   0,  74,   0,   0,   0,
     55, 219, 158,  83, 208,  22, 119, 239,
     41,   0,   0,   0,  50,   0,   0,   0,
     88, 165, 109, 227, 255, 157,  29, 212,
     37,   0,   0,   0,  42,   0,   0,   0,
     62, 159, 245, 159,  71, 204,  11, 239,
     33,   0,   0,   0,  66,   0,   0,   0,
    196, 250, 170,  85, 137, 130, 198, 255,
     29,   0,   0,   0,  58,   0,   0,   0,
     82, 101, 116, 117, 114, 110,   0,   0,
     73, 102,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 112, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     87, 104, 105, 108, 101,   0,   0,   0,
     67,  97, 115, 101,   0,   0,   0,   0,
     68, 101, 102,  67,  97, 115, 101,   0,
     83, 119, 105, 116,  99, 104,   0,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   3,   0,   1,   0,
    164,   1,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   1,   0,   0,   3,   0,   1,   0,
     40,   2,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   2,   0,   0,   3,   0,   1,   0,
     44,   2,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   2,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   2,   0,   0,   3,   0,   1,   0,
     48,   2,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   2,   0,   0,   3,   0,   1,   0,
     52,   2,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   2,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   2,   0,   0,   3,   0,   1,   0,
     56,   2,   0,   0,   2,   0,   1,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   2,   0,   0,   3,   0,   1,   0,
     60,   2,   0,   0,   2,   0,   1,   0,
     10,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   2,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   2,   0,   0,   3,   0,   1,   0,
     64,   2,   0,   0,   2,   0,   1,   0,
     11,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   2,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   2,   0,   0,   3,   0,   1,   0,
     72,   2,   0,   0,   2,   0,   1,   0,
     12,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   2,   0,   0,   3,   0,   1,   0,
     76,   2,   0,   0,   2,   0,   1,   0,
     13,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   2,   0,   0,   3,   0,   1,   0,
     80,   2,   0,   0,   2,   0,   1,   0,
     14,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   2,   0,   0,   3,   0,   1,   0,
     84,   2,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 111, 110,  78, 111, 116,
     73, 110, 105, 116, 105,  97, 108, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 108,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    206, 185, 167, 149, 130, 134, 155, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 116, 117, 114, 110,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    132, 139, 242,  58, 142, 245, 122, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 102,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    117, 129,   8,   1, 144, 149, 239, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 104, 105, 108, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55, 219, 158,  83, 208,  22, 119, 239,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111,  87, 104, 105, 108, 101,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55, 219, 158,  83, 208,  22, 119, 239,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 101,  97, 107,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 105, 110, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 116,  99, 104,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196, 250, 170,  85, 137, 130, 198, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 165, 109, 227, 255, 157,  29, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  67,  97, 115, 101,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62, 159, 245, 159,  71, 204,  11, 239,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6a0f771ad50816c = b_f6a0f771ad50816c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f6a0f771ad50816c[] = {
  &s_899b868295a7b9ce,
  &s_bfef959001088175,
  &s_d41d9dffe36da558,
  &s_e2a8b78aa50d684a,
  &s_ef0bcc479ff59f3e,
  &s_ef7716d0539edb37,
  &s_fe7af58e3af28b84,
  &s_ffc6828955aafac4,
};
static const uint16_t m_f6a0f771ad50816c[] = {1, 10, 13, 3, 11, 2, 14, 9, 4, 6, 7, 5, 12, 0, 8};
static const uint16_t i_f6a0f771ad50816c[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f6a0f771ad50816c[] = {
  { 16777218,  ::stubs::Node< ::stubs::Decl>::_capnpPrivate::brand() },
  { 16777220,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f6a0f771ad50816c = {
  0xf6a0f771ad50816c, b_f6a0f771ad50816c.words, 298, d_f6a0f771ad50816c, m_f6a0f771ad50816c,
  8, 15, i_f6a0f771ad50816c, nullptr, nullptr, { &s_f6a0f771ad50816c, nullptr, bd_f6a0f771ad50816c, 0, sizeof(bd_f6a0f771ad50816c) / sizeof(bd_f6a0f771ad50816c[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_fe7af58e3af28b84 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132, 139, 242,  58, 142, 245, 122, 254,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     82, 101, 116, 117, 114, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 112, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe7af58e3af28b84 = b_fe7af58e3af28b84.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fe7af58e3af28b84[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_fe7af58e3af28b84[] = {0};
static const uint16_t i_fe7af58e3af28b84[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_fe7af58e3af28b84[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_fe7af58e3af28b84 = {
  0xfe7af58e3af28b84, b_fe7af58e3af28b84.words, 47, d_fe7af58e3af28b84, m_fe7af58e3af28b84,
  1, 1, i_fe7af58e3af28b84, nullptr, nullptr, { &s_fe7af58e3af28b84, nullptr, bd_fe7af58e3af28b84, 0, sizeof(bd_fe7af58e3af28b84) / sizeof(bd_fe7af58e3af28b84[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<101> b_bfef959001088175 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117, 129,   8,   1, 144, 149, 239, 191,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     73, 102,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 104, 101, 110,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 108, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bfef959001088175 = b_bfef959001088175.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bfef959001088175[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_bfef959001088175[] = {0, 2, 1};
static const uint16_t i_bfef959001088175[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_bfef959001088175[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
  { 16777218,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_bfef959001088175 = {
  0xbfef959001088175, b_bfef959001088175.words, 101, d_bfef959001088175, m_bfef959001088175,
  1, 3, i_bfef959001088175, nullptr, nullptr, { &s_bfef959001088175, nullptr, bd_bfef959001088175, 0, sizeof(bd_bfef959001088175) / sizeof(bd_bfef959001088175[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_899b868295a7b9ce = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    206, 185, 167, 149, 130, 134, 155, 137,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     67, 111, 109, 112, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 109, 116, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  66, 114,  97,  99, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_899b868295a7b9ce = b_899b868295a7b9ce.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_899b868295a7b9ce[] = {
  &s_b1436df23fb200b4,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_899b868295a7b9ce[] = {1, 0};
static const uint16_t i_899b868295a7b9ce[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_899b868295a7b9ce[] = {
  { 16777216,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_899b868295a7b9ce = {
  0x899b868295a7b9ce, b_899b868295a7b9ce.words, 67, d_899b868295a7b9ce, m_899b868295a7b9ce,
  2, 2, i_899b868295a7b9ce, nullptr, nullptr, { &s_899b868295a7b9ce, nullptr, bd_899b868295a7b9ce, 0, sizeof(bd_899b868295a7b9ce) / sizeof(bd_899b868295a7b9ce[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<109> b_ef7716d0539edb37 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55, 219, 158,  83, 208,  22, 119, 239,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     87, 104, 105, 108, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101,  99,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 104, 105, 108, 101,  76, 111,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ef7716d0539edb37 = b_ef7716d0539edb37.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ef7716d0539edb37[] = {
  &s_adb9aafdab430c1d,
  &s_b1436df23fb200b4,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ef7716d0539edb37[] = {1, 0, 2, 3};
static const uint16_t i_ef7716d0539edb37[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ef7716d0539edb37[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ef7716d0539edb37 = {
  0xef7716d0539edb37, b_ef7716d0539edb37.words, 109, d_ef7716d0539edb37, m_ef7716d0539edb37,
  3, 4, i_ef7716d0539edb37, nullptr, nullptr, { &s_ef7716d0539edb37, nullptr, bd_ef7716d0539edb37, 0, sizeof(bd_ef7716d0539edb37) / sizeof(bd_ef7716d0539edb37[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_d41d9dffe36da558 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88, 165, 109, 227, 255, 157,  29, 212,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     67,  97, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    108, 104, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 109, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d41d9dffe36da558 = b_d41d9dffe36da558.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d41d9dffe36da558[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_d41d9dffe36da558[] = {0, 1};
static const uint16_t i_d41d9dffe36da558[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d41d9dffe36da558[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d41d9dffe36da558 = {
  0xd41d9dffe36da558, b_d41d9dffe36da558.words, 74, d_d41d9dffe36da558, m_d41d9dffe36da558,
  1, 2, i_d41d9dffe36da558, nullptr, nullptr, { &s_d41d9dffe36da558, nullptr, bd_d41d9dffe36da558, 0, sizeof(bd_d41d9dffe36da558) / sizeof(bd_d41d9dffe36da558[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_ef0bcc479ff59f3e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 159, 245, 159,  71, 204,  11, 239,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     68, 101, 102,  67,  97, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 109, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ef0bcc479ff59f3e = b_ef0bcc479ff59f3e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ef0bcc479ff59f3e[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ef0bcc479ff59f3e[] = {0};
static const uint16_t i_ef0bcc479ff59f3e[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ef0bcc479ff59f3e[] = {
  { 16777216,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ef0bcc479ff59f3e = {
  0xef0bcc479ff59f3e, b_ef0bcc479ff59f3e.words, 47, d_ef0bcc479ff59f3e, m_ef0bcc479ff59f3e,
  1, 1, i_ef0bcc479ff59f3e, nullptr, nullptr, { &s_ef0bcc479ff59f3e, nullptr, bd_ef0bcc479ff59f3e, 0, sizeof(bd_ef0bcc479ff59f3e) / sizeof(bd_ef0bcc479ff59f3e[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_ffc6828955aafac4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 250, 170,  85, 137, 130, 198, 255,
     40,   0,   0,   0,   1,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 109, 116,  46,
     83, 119, 105, 116,  99, 104,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ffc6828955aafac4 = b_ffc6828955aafac4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ffc6828955aafac4[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ffc6828955aafac4[] = {1, 0};
static const uint16_t i_ffc6828955aafac4[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ffc6828955aafac4[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ffc6828955aafac4 = {
  0xffc6828955aafac4, b_ffc6828955aafac4.words, 78, d_ffc6828955aafac4, m_ffc6828955aafac4,
  1, 2, i_ffc6828955aafac4, nullptr, nullptr, { &s_ffc6828955aafac4, nullptr, bd_ffc6828955aafac4, 0, sizeof(bd_ffc6828955aafac4) / sizeof(bd_ffc6828955aafac4[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<289> b_d96c7f8624e22938 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,  15,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0, 183,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  79,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,   0,
     44,   0,   0,   0,   1,   0,   1,   0,
     28, 196,  48, 177, 123, 144, 162, 141,
     81,   0,   0,   0,  34,   0,   0,   0,
    129,  12,  20,  11,  71, 101,  76, 214,
     77,   0,   0,   0,  74,   0,   0,   0,
     75,  25,   0, 132, 150, 209,  67, 202,
     77,   0,   0,   0,  50,   0,   0,   0,
    211, 114, 206,  68, 150, 176,  37, 201,
     73,   0,   0,   0,  58,   0,   0,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
     69,   0,   0,   0,  58,   0,   0,   0,
    236, 131,  36, 132, 194, 152,  69, 246,
     65,   0,   0,   0,  42,   0,   0,   0,
    133,  96, 207, 235,  39, 129, 213, 136,
     61,   0,   0,   0,  42,   0,   0,   0,
    202,  91,  54, 211, 144, 225, 106, 228,
     57,   0,   0,   0,  66,   0,   0,   0,
    168, 142, 134, 205,  77, 219, 236, 218,
     53,   0,   0,   0,  42,   0,   0,   0,
     38, 223, 197, 181, 139,  88, 244, 146,
     49,   0,   0,   0,  82,   0,   0,   0,
    188, 101, 234, 226,  80,  52, 232, 248,
     49,   0,   0,   0, 138,   0,   0,   0,
     86,  97, 114,   0,   0,   0,   0,   0,
     70, 117, 110,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 101, 108, 100,   0,   0,   0,
     82, 101,  99, 111, 114, 100,   0,   0,
     77, 101, 116, 104, 111, 100,   0,   0,
     67, 116, 111, 114,   0,   0,   0,   0,
     68, 116, 111, 114,   0,   0,   0,   0,
     84, 121, 112, 101, 100, 101, 102,   0,
     69, 110, 117, 109,   0,   0,   0,   0,
     78,  97, 109, 101, 115, 112,  97,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
     70, 117, 110,  99, 116, 105, 111, 110,
     84, 101, 109, 112, 108,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   3,   0,   1,   0,
    164,   1,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    172,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   1,   0,   0,   3,   0,   1,   0,
    188,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   1,   0,   0,   3,   0,   1,   0,
    196,   1,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   1,   0,   0,   3,   0,   1,   0,
    204,   1,   0,   0,   2,   0,   1,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   1,   0,   0,   3,   0,   1,   0,
    208,   1,   0,   0,   2,   0,   1,   0,
     10,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
     11,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
     12,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
     13,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
     14,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 111, 110,  78, 111, 116,
     73, 110, 105, 116, 105,  97, 108, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 116, 121,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 114,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     28, 196,  48, 177, 123, 144, 162, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129,  12,  20,  11,  71, 101,  76, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 101, 108, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75,  25,   0, 132, 150, 209,  67, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 111, 114, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 114, 206,  68, 150, 176,  37, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 115, 115,  83, 112,
    101,  99,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 116, 111, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236, 131,  36, 132, 194, 152,  69, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 116, 111, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    133,  96, 207, 235,  39, 129, 213, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101, 100, 101, 102,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    202,  91,  54, 211, 144, 225, 106, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 117, 109,  68, 101,  99, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    168, 142, 134, 205,  77, 219, 236, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101, 115, 112,  97,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 223, 197, 181, 139,  88, 244, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99, 116, 105, 111, 110,
     84, 101, 109, 112, 108,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    188, 101, 234, 226,  80,  52, 232, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d96c7f8624e22938 = b_d96c7f8624e22938.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d96c7f8624e22938[] = {
  &s_88d58127ebcf6085,
  &s_8da2907bb130c41c,
  &s_92f4588bb5c5df26,
  &s_bebeef9161eb7d3c,
  &s_c925b09644ce72d3,
  &s_ca43d1968400194b,
  &s_d64c65470b140c81,
  &s_daecdb4dcd868ea8,
  &s_e46ae190d3365bca,
  &s_f64598c2842483ec,
  &s_f8e83450e2ea65bc,
};
static const uint16_t m_d96c7f8624e22938[] = {8, 1, 9, 10, 2, 12, 5, 4, 14, 7, 13, 6, 11, 0, 3};
static const uint16_t i_d96c7f8624e22938[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
const ::capnp::_::RawSchema s_d96c7f8624e22938 = {
  0xd96c7f8624e22938, b_d96c7f8624e22938.words, 289, d_d96c7f8624e22938, m_d96c7f8624e22938,
  11, 15, i_d96c7f8624e22938, nullptr, nullptr, { &s_d96c7f8624e22938, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_8da2907bb130c41c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28, 196,  48, 177, 123, 144, 162, 141,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     86,  97, 114,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    182, 230,  57, 145, 162, 141,  32, 212,
      9,   0,   0,   0,  82,   0,   0,   0,
    146,  80,  22, 203,  48,   4, 255, 150,
      9,   0,   0,   0,  66,   0,   0,   0,
     73, 110, 105, 116,  83, 116, 121, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
     86,  97, 114,  73, 110, 105, 116,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    146,  80,  22, 203,  48,   4, 255, 150,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8da2907bb130c41c = b_8da2907bb130c41c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8da2907bb130c41c[] = {
  &s_96ff0430cb165092,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_8da2907bb130c41c[] = {2, 0, 1};
static const uint16_t i_8da2907bb130c41c[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8da2907bb130c41c[] = {
  { 16777217,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8da2907bb130c41c = {
  0x8da2907bb130c41c, b_8da2907bb130c41c.words, 84, d_8da2907bb130c41c, m_8da2907bb130c41c,
  2, 3, i_8da2907bb130c41c, nullptr, nullptr, { &s_8da2907bb130c41c, nullptr, bd_8da2907bb130c41c, 0, sizeof(bd_8da2907bb130c41c) / sizeof(bd_8da2907bb130c41c[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d4208da29139e6b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182, 230,  57, 145, 162, 141,  32, 212,
     44,   0,   0,   0,   2,   0,   0,   0,
     28, 196,  48, 177, 123, 144, 162, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     86,  97, 114,  46,  73, 110, 105, 116,
     83, 116, 121, 108, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  73, 110, 105, 116,   0,   0,   0,
     99,  97, 108, 108,  73, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 115, 116,  73, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4208da29139e6b6 = b_d4208da29139e6b6.words;
#if !CAPNP_LITE
static const uint16_t m_d4208da29139e6b6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d4208da29139e6b6 = {
  0xd4208da29139e6b6, b_d4208da29139e6b6.words, 35, nullptr, m_d4208da29139e6b6,
  0, 3, nullptr, nullptr, nullptr, { &s_d4208da29139e6b6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(InitStyle_d4208da29139e6b6, d4208da29139e6b6);
static const ::capnp::_::AlignedData<63> b_96ff0430cb165092 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146,  80,  22, 203,  48,   4, 255, 150,
     44,   0,   0,   0,   1,   0,   1,   0,
     28, 196,  48, 177, 123, 144, 162, 141,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     86,  97, 114,  46,  86,  97, 114,  73,
    110, 105, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 121, 108, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    182, 230,  57, 145, 162, 141,  32, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_96ff0430cb165092 = b_96ff0430cb165092.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_96ff0430cb165092[] = {
  &s_d4208da29139e6b6,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_96ff0430cb165092[] = {0, 1};
static const uint16_t i_96ff0430cb165092[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_96ff0430cb165092[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_96ff0430cb165092 = {
  0x96ff0430cb165092, b_96ff0430cb165092.words, 63, d_96ff0430cb165092, m_96ff0430cb165092,
  2, 2, i_96ff0430cb165092, nullptr, nullptr, { &s_96ff0430cb165092, nullptr, bd_96ff0430cb165092, 0, sizeof(bd_96ff0430cb165092) / sizeof(bd_96ff0430cb165092[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<129> b_d64c65470b140c81 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129,  12,  20,  11,  71, 101,  76, 214,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     70, 117, 110,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    108, 129,  80, 173, 113, 247, 160, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    241,  68, 242,  12,  24, 213,  53, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d64c65470b140c81 = b_d64c65470b140c81.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d64c65470b140c81[] = {
  &s_ab35d5180cf244f1,
  &s_adb9aafdab430c1d,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_d64c65470b140c81[] = {1, 4, 0, 3, 2};
static const uint16_t i_d64c65470b140c81[] = {0, 1, 2, 3, 4};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d64c65470b140c81[] = {
  { 16777217,  ::stubs::Node< ::stubs::Stmt>::_capnpPrivate::brand() },
  { 16777218,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d64c65470b140c81 = {
  0xd64c65470b140c81, b_d64c65470b140c81.words, 129, d_d64c65470b140c81, m_d64c65470b140c81,
  3, 5, i_d64c65470b140c81, nullptr, nullptr, { &s_d64c65470b140c81, nullptr, bd_d64c65470b140c81, 0, sizeof(bd_d64c65470b140c81) / sizeof(bd_d64c65470b140c81[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<85> b_ca43d1968400194b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75,  25,   0, 132, 150, 209,  67, 202,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     70, 105, 101, 108, 100,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     54, 105, 113,   7,  84,  68, 171, 190,
      9,   0,   0,   0,  82,   0,   0,   0,
     50,  36, 200,  45, 109, 172, 175, 145,
      9,   0,   0,   0,  82,   0,   0,   0,
     73, 110, 105, 116,  83, 116, 121, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
     70, 105, 101, 108, 100,  73, 110, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50,  36, 200,  45, 109, 172, 175, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca43d1968400194b = b_ca43d1968400194b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ca43d1968400194b[] = {
  &s_91afac6d2dc82432,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ca43d1968400194b[] = {2, 0, 1};
static const uint16_t i_ca43d1968400194b[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ca43d1968400194b[] = {
  { 16777217,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ca43d1968400194b = {
  0xca43d1968400194b, b_ca43d1968400194b.words, 85, d_ca43d1968400194b, m_ca43d1968400194b,
  2, 3, i_ca43d1968400194b, nullptr, nullptr, { &s_ca43d1968400194b, nullptr, bd_ca43d1968400194b, 0, sizeof(bd_ca43d1968400194b) / sizeof(bd_ca43d1968400194b[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_beab445407716936 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     54, 105, 113,   7,  84,  68, 171, 190,
     46,   0,   0,   0,   2,   0,   0,   0,
     75,  25,   0, 132, 150, 209,  67, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     70, 105, 101, 108, 100,  46,  73, 110,
    105, 116,  83, 116, 121, 108, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 112, 121,  73, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 115, 116,  73, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_beab445407716936 = b_beab445407716936.words;
#if !CAPNP_LITE
static const uint16_t m_beab445407716936[] = {0, 1};
const ::capnp::_::RawSchema s_beab445407716936 = {
  0xbeab445407716936, b_beab445407716936.words, 31, nullptr, m_beab445407716936,
  0, 2, nullptr, nullptr, nullptr, { &s_beab445407716936, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(InitStyle_beab445407716936, beab445407716936);
static const ::capnp::_::AlignedData<63> b_91afac6d2dc82432 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50,  36, 200,  45, 109, 172, 175, 145,
     46,   0,   0,   0,   1,   0,   1,   0,
     75,  25,   0, 132, 150, 209,  67, 202,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     70, 105, 101, 108, 100,  46,  70, 105,
    101, 108, 100,  73, 110, 105, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 121, 108, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     54, 105, 113,   7,  84,  68, 171, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_91afac6d2dc82432 = b_91afac6d2dc82432.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_91afac6d2dc82432[] = {
  &s_beab445407716936,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_91afac6d2dc82432[] = {0, 1};
static const uint16_t i_91afac6d2dc82432[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_91afac6d2dc82432[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_91afac6d2dc82432 = {
  0x91afac6d2dc82432, b_91afac6d2dc82432.words, 63, d_91afac6d2dc82432, m_91afac6d2dc82432,
  2, 2, i_91afac6d2dc82432, nullptr, nullptr, { &s_91afac6d2dc82432, nullptr, bd_91afac6d2dc82432, 0, sizeof(bd_91afac6d2dc82432) / sizeof(bd_91afac6d2dc82432[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_c925b09644ce72d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211, 114, 206,  68, 150, 176,  37, 201,
     40,   0,   0,   0,   1,   0,   1,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     82, 101,  99, 111, 114, 100,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    142, 100,  38, 127, 105, 174, 250, 159,
      9,   0,   0,   0,  74,   0,   0,   0,
    155, 104, 176,   4, 172, 160, 110, 210,
      9,   0,   0,   0,  42,   0,   0,   0,
     66,  97, 115, 101,  83, 112, 101,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
     66, 111, 100, 121,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    116, 140, 175, 107, 175, 104,  32, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    155, 104, 176,   4, 172, 160, 110, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c925b09644ce72d3 = b_c925b09644ce72d3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c925b09644ce72d3[] = {
  &s_b32068af6baf8c74,
  &s_d26ea0ac04b0689b,
};
static const uint16_t m_c925b09644ce72d3[] = {2, 1, 0};
static const uint16_t i_c925b09644ce72d3[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c925b09644ce72d3 = {
  0xc925b09644ce72d3, b_c925b09644ce72d3.words, 72, d_c925b09644ce72d3, m_c925b09644ce72d3,
  2, 3, i_c925b09644ce72d3, nullptr, nullptr, { &s_c925b09644ce72d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_9ffaae697f26648e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 100,  38, 127, 105, 174, 250, 159,
     47,   0,   0,   0,   1,   0,   1,   0,
    211, 114, 206,  68, 150, 176,  37, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     82, 101,  99, 111, 114, 100,  46,  66,
     97, 115, 101,  83, 112, 101,  99,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 114, 116, 117,  97, 108,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ffaae697f26648e = b_9ffaae697f26648e.words;
#if !CAPNP_LITE
static const uint16_t m_9ffaae697f26648e[] = {0, 1};
static const uint16_t i_9ffaae697f26648e[] = {0, 1};
const ::capnp::_::RawSchema s_9ffaae697f26648e = {
  0x9ffaae697f26648e, b_9ffaae697f26648e.words, 51, nullptr, m_9ffaae697f26648e,
  0, 2, i_9ffaae697f26648e, nullptr, nullptr, { &s_9ffaae697f26648e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<136> b_d26ea0ac04b0689b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 104, 176,   4, 172, 160, 110, 210,
     47,   0,   0,   0,   1,   0,   1,   0,
    211, 114, 206,  68, 150, 176,  37, 201,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     82, 101,  99, 111, 114, 100,  46,  66,
    111, 100, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     16,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
    100, 101,  99, 108, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    142, 100,  38, 127, 105, 174, 250, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 108, 121, 109, 111, 114, 112,
    104, 105,  99,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110,  79, 118, 101, 114, 114,
    105, 100, 100, 101, 110,  77, 101, 116,
    104, 111, 100, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  65,  98, 115, 116, 114,  97,
     99, 116,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d26ea0ac04b0689b = b_d26ea0ac04b0689b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d26ea0ac04b0689b[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_d26ea0ac04b0689b[] = {1, 0, 4, 3, 2};
static const uint16_t i_d26ea0ac04b0689b[] = {0, 1, 2, 3, 4};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d26ea0ac04b0689b[] = {
  { 16777216,  ::stubs::Node< ::stubs::Decl>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Decl::Record::BaseSpec>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d26ea0ac04b0689b = {
  0xd26ea0ac04b0689b, b_d26ea0ac04b0689b.words, 136, d_d26ea0ac04b0689b, m_d26ea0ac04b0689b,
  1, 5, i_d26ea0ac04b0689b, nullptr, nullptr, { &s_d26ea0ac04b0689b, nullptr, bd_d26ea0ac04b0689b, 0, sizeof(bd_d26ea0ac04b0689b) / sizeof(bd_d26ea0ac04b0689b[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<120> b_bebeef9161eb7d3c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
     40,   0,   0,   0,   1,   0,   1,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     77, 101, 116, 104, 111, 100,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     63, 128,  57,  83,  63, 103, 162, 225,
      1,   0,   0,   0,  74,   0,   0,   0,
     79, 118, 101, 114, 114, 105, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 105,  99,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129,  12,  20,  11,  71, 101,  76, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 104, 105, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109, 112, 108, 105,  99, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 105, 114, 116, 117,  97, 108,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118, 101, 114, 114, 105, 100, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63, 128,  57,  83,  63, 103, 162, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bebeef9161eb7d3c = b_bebeef9161eb7d3c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bebeef9161eb7d3c[] = {
  &s_d64c65470b140c81,
  &s_e1a2673f5339803f,
  &s_f4d8929c89991d82,
};
static const uint16_t m_bebeef9161eb7d3c[] = {1, 3, 5, 0, 2, 4};
static const uint16_t i_bebeef9161eb7d3c[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_bebeef9161eb7d3c = {
  0xbebeef9161eb7d3c, b_bebeef9161eb7d3c.words, 120, d_bebeef9161eb7d3c, m_bebeef9161eb7d3c,
  3, 6, i_bebeef9161eb7d3c, nullptr, nullptr, { &s_bebeef9161eb7d3c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_e1a2673f5339803f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63, 128,  57,  83,  63, 103, 162, 225,
     47,   0,   0,   0,   1,   0,   0,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     77, 101, 116, 104, 111, 100,  46,  79,
    118, 101, 114, 114, 105, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     15, 153,   9,  57, 141,  85, 150, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e1a2673f5339803f = b_e1a2673f5339803f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e1a2673f5339803f[] = {
  &s_ec96558d3909990f,
};
static const uint16_t m_e1a2673f5339803f[] = {1, 0};
static const uint16_t i_e1a2673f5339803f[] = {0, 1};
const ::capnp::_::RawSchema s_e1a2673f5339803f = {
  0xe1a2673f5339803f, b_e1a2673f5339803f.words, 51, d_e1a2673f5339803f, m_e1a2673f5339803f,
  1, 2, i_e1a2673f5339803f, nullptr, nullptr, { &s_e1a2673f5339803f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_f64598c2842483ec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236, 131,  36, 132, 194, 152,  69, 246,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     67, 116, 111, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     47,  79,  50,  12,  16, 161,  31, 163,
      1,   0,   0,   0,  74,   0,   0,   0,
     67, 116, 111, 114,  73, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     47,  79,  50,  12,  16, 161,  31, 163,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 101, 110, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     15, 153,   9,  57, 141,  85, 150, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f64598c2842483ec = b_f64598c2842483ec.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f64598c2842483ec[] = {
  &s_a31fa1100c324f2f,
  &s_bebeef9161eb7d3c,
  &s_ec96558d3909990f,
};
static const uint16_t m_f64598c2842483ec[] = {1, 0, 2};
static const uint16_t i_f64598c2842483ec[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f64598c2842483ec = {
  0xf64598c2842483ec, b_f64598c2842483ec.words, 74, d_f64598c2842483ec, m_f64598c2842483ec,
  3, 3, i_f64598c2842483ec, nullptr, nullptr, { &s_f64598c2842483ec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_a31fa1100c324f2f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47,  79,  50,  12,  16, 161,  31, 163,
     45,   0,   0,   0,   1,   0,   1,   0,
    236, 131,  36, 132, 194, 152,  69, 246,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     67, 116, 111, 114,  46,  67, 116, 111,
    114,  73, 110, 105, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 105, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  87, 114, 105, 116, 116, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a31fa1100c324f2f = b_a31fa1100c324f2f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a31fa1100c324f2f[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_a31fa1100c324f2f[] = {1, 2, 0};
static const uint16_t i_a31fa1100c324f2f[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_a31fa1100c324f2f[] = {
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_a31fa1100c324f2f = {
  0xa31fa1100c324f2f, b_a31fa1100c324f2f.words, 79, d_a31fa1100c324f2f, m_a31fa1100c324f2f,
  1, 3, i_a31fa1100c324f2f, nullptr, nullptr, { &s_a31fa1100c324f2f, nullptr, bd_a31fa1100c324f2f, 0, sizeof(bd_a31fa1100c324f2f) / sizeof(bd_a31fa1100c324f2f[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_88d58127ebcf6085 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133,  96, 207, 235,  39, 129, 213, 136,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     68, 116, 111, 114,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116, 104, 111, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60, 125, 235,  97, 145, 239, 190, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 101, 110, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     15, 153,   9,  57, 141,  85, 150, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88d58127ebcf6085 = b_88d58127ebcf6085.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_88d58127ebcf6085[] = {
  &s_bebeef9161eb7d3c,
  &s_ec96558d3909990f,
};
static const uint16_t m_88d58127ebcf6085[] = {0, 1};
static const uint16_t i_88d58127ebcf6085[] = {0, 1};
const ::capnp::_::RawSchema s_88d58127ebcf6085 = {
  0x88d58127ebcf6085, b_88d58127ebcf6085.words, 50, d_88d58127ebcf6085, m_88d58127ebcf6085,
  2, 2, i_88d58127ebcf6085, nullptr, nullptr, { &s_88d58127ebcf6085, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_e46ae190d3365bca = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    202,  91,  54, 211, 144, 225, 106, 228,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     84, 121, 112, 101, 100, 101, 102,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e46ae190d3365bca = b_e46ae190d3365bca.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e46ae190d3365bca[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_e46ae190d3365bca[] = {1, 0};
static const uint16_t i_e46ae190d3365bca[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_e46ae190d3365bca[] = {
  { 16777216,  ::stubs::Node< ::stubs::Type>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_e46ae190d3365bca = {
  0xe46ae190d3365bca, b_e46ae190d3365bca.words, 62, d_e46ae190d3365bca, m_e46ae190d3365bca,
  1, 2, i_e46ae190d3365bca, nullptr, nullptr, { &s_e46ae190d3365bca, nullptr, bd_e46ae190d3365bca, 0, sizeof(bd_e46ae190d3365bca) / sizeof(bd_e46ae190d3365bca[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_daecdb4dcd868ea8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    168, 142, 134, 205,  77, 219, 236, 218,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     69, 110, 117, 109,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     93,  84, 212, 173, 219, 107, 103, 135,
      1,   0,   0,   0,  82,   0,   0,   0,
     69, 110, 117, 109,  70, 105, 101, 108,
    100,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 101, 108, 100, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93,  84, 212, 173, 219, 107, 103, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_daecdb4dcd868ea8 = b_daecdb4dcd868ea8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_daecdb4dcd868ea8[] = {
  &s_87676bdbadd4545d,
};
static const uint16_t m_daecdb4dcd868ea8[] = {1, 0};
static const uint16_t i_daecdb4dcd868ea8[] = {0, 1};
const ::capnp::_::RawSchema s_daecdb4dcd868ea8 = {
  0xdaecdb4dcd868ea8, b_daecdb4dcd868ea8.words, 58, d_daecdb4dcd868ea8, m_daecdb4dcd868ea8,
  1, 2, i_daecdb4dcd868ea8, nullptr, nullptr, { &s_daecdb4dcd868ea8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_87676bdbadd4545d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93,  84, 212, 173, 219, 107, 103, 135,
     45,   0,   0,   0,   1,   0,   0,   0,
    168, 142, 134, 205,  77, 219, 236, 218,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     69, 110, 117, 109,  46,  69, 110, 117,
    109,  70, 105, 101, 108, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87676bdbadd4545d = b_87676bdbadd4545d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_87676bdbadd4545d[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_87676bdbadd4545d[] = {1, 0};
static const uint16_t i_87676bdbadd4545d[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_87676bdbadd4545d[] = {
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_87676bdbadd4545d = {
  0x87676bdbadd4545d, b_87676bdbadd4545d.words, 63, d_87676bdbadd4545d, m_87676bdbadd4545d,
  1, 2, i_87676bdbadd4545d, nullptr, nullptr, { &s_87676bdbadd4545d, nullptr, bd_87676bdbadd4545d, 0, sizeof(bd_87676bdbadd4545d) / sizeof(bd_87676bdbadd4545d[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_92f4588bb5c5df26 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 223, 197, 181, 139,  88, 244, 146,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     78,  97, 109, 101, 115, 112,  97,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 108, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92f4588bb5c5df26 = b_92f4588bb5c5df26.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_92f4588bb5c5df26[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_92f4588bb5c5df26[] = {1, 0};
static const uint16_t i_92f4588bb5c5df26[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_92f4588bb5c5df26[] = {
  { 16777217,  ::stubs::Node< ::stubs::Decl>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_92f4588bb5c5df26 = {
  0x92f4588bb5c5df26, b_92f4588bb5c5df26.words, 67, d_92f4588bb5c5df26, m_92f4588bb5c5df26,
  1, 2, i_92f4588bb5c5df26, nullptr, nullptr, { &s_92f4588bb5c5df26, nullptr, bd_92f4588bb5c5df26, 0, sizeof(bd_92f4588bb5c5df26) / sizeof(bd_92f4588bb5c5df26[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_f8e83450e2ea65bc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188, 101, 234, 226,  80,  52, 232, 248,
     40,   0,   0,   0,   1,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  68, 101,  99, 108,  46,
     70, 117, 110,  99, 116, 105, 111, 110,
     84, 101, 109, 112, 108,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101,  99, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129,  12,  20,  11,  71, 101,  76, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 114,  97,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8e83450e2ea65bc = b_f8e83450e2ea65bc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f8e83450e2ea65bc[] = {
  &s_adb9aafdab430c1d,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_f8e83450e2ea65bc[] = {2, 0, 1};
static const uint16_t i_f8e83450e2ea65bc[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f8e83450e2ea65bc[] = {
  { 16777217,  ::stubs::Node< ::stubs::Decl::Function>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f8e83450e2ea65bc = {
  0xf8e83450e2ea65bc, b_f8e83450e2ea65bc.words, 88, d_f8e83450e2ea65bc, m_f8e83450e2ea65bc,
  2, 3, i_f8e83450e2ea65bc, nullptr, nullptr, { &s_f8e83450e2ea65bc, nullptr, bd_f8e83450e2ea65bc, 0, sizeof(bd_f8e83450e2ea65bc) / sizeof(bd_f8e83450e2ea65bc[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_e1ccba681f3b88c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198, 136,  59,  31, 104, 186, 204, 225,
     35,   0,   0,   0,   2,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 247,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  85, 110,  97, 114, 121,
     79, 112,  75, 105, 110, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108, 117, 115,   0,   0,   0,   0,
    109, 105, 110, 117, 115,   0,   0,   0,
    110, 111, 116,   0,   0,   0,   0,   0,
    108,  78, 111, 116,   0,   0,   0,   0,
     97, 100, 100, 114,  79, 102,   0,   0,
    100, 101, 114, 101, 102,   0,   0,   0,
    112, 114, 101,  73, 110,  99,   0,   0,
    112, 114, 101,  68, 101,  99,   0,   0,
    112, 111, 115, 116,  73, 110,  99,   0,
    112, 111, 115, 116,  68, 101,  99,   0, }
};
::capnp::word const* const bp_e1ccba681f3b88c6 = b_e1ccba681f3b88c6.words;
#if !CAPNP_LITE
static const uint16_t m_e1ccba681f3b88c6[] = {4, 5, 3, 1, 2, 0, 9, 8, 7, 6};
const ::capnp::_::RawSchema s_e1ccba681f3b88c6 = {
  0xe1ccba681f3b88c6, b_e1ccba681f3b88c6.words, 60, nullptr, m_e1ccba681f3b88c6,
  0, 10, nullptr, nullptr, nullptr, { &s_e1ccba681f3b88c6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(UnaryOpKind_e1ccba681f3b88c6, e1ccba681f3b88c6);
static const ::capnp::_::AlignedData<146> b_daee06933175bc05 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 188, 117,  49, 147,   6, 238, 218,
     35,   0,   0,   0,   2,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 191,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  66, 105, 110,  97, 114,
    121,  79, 112,  75, 105, 110, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    116,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     23,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     26,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     27,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100,   0,   0,   0,   0,   0,
    115, 117,  98,   0,   0,   0,   0,   0,
     97, 115, 115, 105, 103, 110,   0,   0,
    109, 117, 108,   0,   0,   0,   0,   0,
    100, 105, 118,   0,   0,   0,   0,   0,
    114, 101, 109,   0,   0,   0,   0,   0,
    115, 104, 108,   0,   0,   0,   0,   0,
    115, 104, 114,   0,   0,   0,   0,   0,
    108, 116,   0,   0,   0,   0,   0,   0,
    103, 116,   0,   0,   0,   0,   0,   0,
    108, 101,   0,   0,   0,   0,   0,   0,
    103, 101,   0,   0,   0,   0,   0,   0,
    101, 113,   0,   0,   0,   0,   0,   0,
    110, 101,   0,   0,   0,   0,   0,   0,
     97, 110, 100,   0,   0,   0,   0,   0,
    111, 114,   0,   0,   0,   0,   0,   0,
    120, 111, 114,   0,   0,   0,   0,   0,
    108,  65, 110, 100,   0,   0,   0,   0,
    108,  79, 114,   0,   0,   0,   0,   0,
    109, 117, 108,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 118,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 109,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 108,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 114,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 100,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    120, 111, 114,  65, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
    111, 114,  65, 115, 115, 105, 103, 110,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_daee06933175bc05 = b_daee06933175bc05.words;
#if !CAPNP_LITE
static const uint16_t m_daee06933175bc05[] = {0, 22, 14, 26, 2, 4, 20, 12, 11, 9, 17, 18, 10, 8, 3, 19, 13, 15, 28, 5, 21, 6, 24, 7, 25, 1, 23, 16, 27};
const ::capnp::_::RawSchema s_daee06933175bc05 = {
  0xdaee06933175bc05, b_daee06933175bc05.words, 146, nullptr, m_daee06933175bc05,
  0, 29, nullptr, nullptr, nullptr, { &s_daee06933175bc05, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(BinaryOpKind_daee06933175bc05, daee06933175bc05);
static const ::capnp::_::AlignedData<32> b_8fa195ee3833f42e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46, 244,  51,  56, 238, 149, 161, 143,
     35,   0,   0,   0,   2,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 117, 102,  75, 105,
    110, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  83, 117, 102,   0,   0,   0,   0,
    108,  76,  83, 117, 102,   0,   0,   0,
    110, 111,  83, 117, 102,   0,   0,   0, }
};
::capnp::word const* const bp_8fa195ee3833f42e = b_8fa195ee3833f42e.words;
#if !CAPNP_LITE
static const uint16_t m_8fa195ee3833f42e[] = {1, 0, 2};
const ::capnp::_::RawSchema s_8fa195ee3833f42e = {
  0x8fa195ee3833f42e, b_8fa195ee3833f42e.words, 32, nullptr, m_8fa195ee3833f42e,
  0, 3, nullptr, nullptr, nullptr, { &s_8fa195ee3833f42e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SufKind_8fa195ee3833f42e, 8fa195ee3833f42e);
static const ::capnp::_::AlignedData<32> b_da936a12fe3023f7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  35,  48, 254,  18, 106, 147, 218,
     35,   0,   0,   0,   2,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  78,  98,  66,  97, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 105, 109,  97, 108,   0,
    111,  99, 116,  97, 108,   0,   0,   0,
    104, 101, 120,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da936a12fe3023f7 = b_da936a12fe3023f7.words;
#if !CAPNP_LITE
static const uint16_t m_da936a12fe3023f7[] = {0, 2, 1};
const ::capnp::_::RawSchema s_da936a12fe3023f7 = {
  0xda936a12fe3023f7, b_da936a12fe3023f7.words, 32, nullptr, m_da936a12fe3023f7,
  0, 3, nullptr, nullptr, nullptr, { &s_da936a12fe3023f7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(NbBase_da936a12fe3023f7, da936a12fe3023f7);
static const ::capnp::_::AlignedData<398> b_d5d009cc85c86562 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,  20,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 103,   4,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,   0,
     36,   0,   0,   0,   1,   0,   1,   0,
    121, 230,  72, 143, 106, 216,  37, 181,
     65,   0,   0,   0,  66,   0,   0,   0,
    124,  39, 141, 240,  93, 154,  94, 185,
     61,   0,   0,   0,  74,   0,   0,   0,
     49, 150,  42,  71, 255,  49,  23, 162,
     61,   0,   0,   0,  58,   0,   0,   0,
     88, 155, 222, 238, 223, 103, 197, 214,
     57,   0,   0,   0,  42,   0,   0,   0,
     39,  47, 178, 250, 133,  97, 215, 164,
     53,   0,   0,   0,  90,   0,   0,   0,
     33, 119, 142, 214, 100, 151,  80, 171,
     53,   0,   0,   0,  58,   0,   0,   0,
     96, 153,  53,  29, 117, 195, 219, 224,
     49,   0,   0,   0,  34,   0,   0,   0,
     47, 119,  22, 144, 181, 197, 148, 144,
     45,   0,   0,   0,  82,   0,   0,   0,
     13,  85, 146,  41,  57, 126,  88, 166,
     45,   0,   0,   0, 122,   0,   0,   0,
     85, 110,  97, 114, 121,  79, 112,   0,
     66, 105, 110,  97, 114, 121,  79, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     73, 110, 116,  76, 105, 116,   0,   0,
     67,  97, 108, 108,   0,   0,   0,   0,
     77, 101, 109,  98, 101, 114,  67,  97,
    108, 108,   0,   0,   0,   0,   0,   0,
     77, 101, 109,  98, 101, 114,   0,   0,
     78, 101, 119,   0,   0,   0,   0,   0,
     67, 111, 110, 115, 116, 114, 117,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
     83, 116, 114, 117,  99, 116,  84, 111,
     83, 116, 114, 117,  99, 116,   0,   0,
     80,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   2,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   2,   0,   0,   3,   0,   1,   0,
     48,   2,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   2,   0,   0,   3,   0,   1,   0,
     52,   2,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   2,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   2,   0,   0,   3,   0,   1,   0,
     60,   2,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,  16,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   2,   0,   0,   3,   0,   1,   0,
     64,   2,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   2,   0,   0,   3,   0,   1,   0,
     68,   2,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   2,   0,   0,   3,   0,   1,   0,
     76,   2,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   2,   0,   0,   3,   0,   1,   0,
     80,   2,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   2,   0,   0,   3,   0,   1,   0,
     84,   2,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   2,   0,   0,   3,   0,   1,   0,
     88,   2,   0,   0,   2,   0,   1,   0,
      9,   0, 246, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   2,   0,   0,   3,   0,   1,   0,
     92,   2,   0,   0,   2,   0,   1,   0,
     10,   0, 245, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   2,   0,   0,   3,   0,   1,   0,
    100,   2,   0,   0,   2,   0,   1,   0,
     11,   0, 244, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   2,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   2,   0,   0,   3,   0,   1,   0,
    104,   2,   0,   0,   2,   0,   1,   0,
     12,   0, 243, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   2,   0,   0,   3,   0,   1,   0,
    112,   2,   0,   0,   2,   0,   1,   0,
     13,   0, 242, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   2,   0,   0,   3,   0,   1,   0,
    120,   2,   0,   0,   2,   0,   1,   0,
     14,   0, 241, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   2,   0,   0,   3,   0,   1,   0,
    172,   2,   0,   0,   2,   0,   1,   0,
     15,   0, 240, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   2,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   2,   0,   0,   3,   0,   1,   0,
    228,   2,   0,   0,   2,   0,   1,   0,
     16,   0, 239, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   2,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   2,   0,   0,   3,   0,   1,   0,
     28,   3,   0,   0,   2,   0,   1,   0,
     17,   0, 238, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   3,   0,   0,   3,   0,   1,   0,
     36,   3,   0,   0,   2,   0,   1,   0,
     18,   0, 237, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   3,   0,   0,   3,   0,   1,   0,
     44,   3,   0,   0,   2,   0,   1,   0,
     19,   0, 236, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   3,   0,   0,   3,   0,   1,   0,
     52,   3,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 111, 110,  78, 111, 116,
     73, 110, 105, 116, 105,  97, 108, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110,  97, 114, 121,  79, 112,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    121, 230,  72, 143, 106, 216,  37, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 110,  97, 114, 121,  79, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124,  39, 141, 240,  93, 154,  94, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108,  76, 105, 116,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  76, 105, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     49, 150,  42,  71, 255,  49,  23, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,  76, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 155, 222, 238, 223, 103, 197, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 108,  82, 101, 102,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 109,  98, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     33, 119, 142, 214, 100, 151,  80, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 104, 105, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 109,  98, 101, 114,  67,  97,
    108, 108,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     39,  47, 178, 250, 133,  97, 215, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 119,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     96, 153,  53,  29, 117, 195, 219, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 115, 116, 114, 117,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     47, 119,  22, 144, 181, 197, 148, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 117, 108, 108,  80, 116, 114,  76,
    105, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 108, 101, 116, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114, 117, 110,  99,  97, 116, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  86,  97, 108, 117, 101,  84, 111,
     82,  86,  97, 108, 117, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 114, 105, 118, 101, 100,  84,
    111,  66,  97, 115, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13,  85, 146,  41,  57, 126,  88, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,  84, 111,  68, 101,
    114, 105, 118, 101, 100,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13,  85, 146,  41,  57, 126,  88, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 101, 114,  97, 116, 111, 114,
     67,  97, 108, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 155, 222, 238, 223, 103, 197, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5d009cc85c86562 = b_d5d009cc85c86562.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5d009cc85c86562[] = {
  &s_9094c5b59016772f,
  &s_a21731ff472a9631,
  &s_a4d76185fab22f27,
  &s_a6587e392992550d,
  &s_ab509764d68e7721,
  &s_b525d86a8f48e679,
  &s_b95e9a5df08d277c,
  &s_d6c567dfeede9b58,
  &s_e0dbc3751d359960,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_d5d009cc85c86562[] = {18, 2, 3, 6, 12, 7, 14, 17, 4, 16, 8, 10, 11, 13, 19, 5, 9, 15, 1, 0};
static const uint16_t i_d5d009cc85c86562[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d5d009cc85c86562[] = {
  { 16777230,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777231,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777232,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d5d009cc85c86562 = {
  0xd5d009cc85c86562, b_d5d009cc85c86562.words, 398, d_d5d009cc85c86562, m_d5d009cc85c86562,
  10, 20, i_d5d009cc85c86562, nullptr, nullptr, { &s_d5d009cc85c86562, nullptr, bd_d5d009cc85c86562, 0, sizeof(bd_d5d009cc85c86562) / sizeof(bd_d5d009cc85c86562[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_b525d86a8f48e679 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 230,  72, 143, 106, 216,  37, 181,
     40,   0,   0,   0,   1,   0,   1,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     85, 110,  97, 114, 121,  79, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    111, 112, 101, 114,  97, 110, 100,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    198, 136,  59,  31, 104, 186, 204, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b525d86a8f48e679 = b_b525d86a8f48e679.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b525d86a8f48e679[] = {
  &s_e1ccba681f3b88c6,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_b525d86a8f48e679[] = {1, 0};
static const uint16_t i_b525d86a8f48e679[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b525d86a8f48e679[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b525d86a8f48e679 = {
  0xb525d86a8f48e679, b_b525d86a8f48e679.words, 62, d_b525d86a8f48e679, m_b525d86a8f48e679,
  2, 2, i_b525d86a8f48e679, nullptr, nullptr, { &s_b525d86a8f48e679, nullptr, bd_b525d86a8f48e679, 0, sizeof(bd_b525d86a8f48e679) / sizeof(bd_b525d86a8f48e679[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<90> b_b95e9a5df08d277c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124,  39, 141, 240,  93, 154,  94, 185,
     40,   0,   0,   0,   1,   0,   1,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     66, 105, 110,  97, 114, 121,  79, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    108, 104, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 104, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      5, 188, 117,  49, 147,   6, 238, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b95e9a5df08d277c = b_b95e9a5df08d277c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b95e9a5df08d277c[] = {
  &s_daee06933175bc05,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_b95e9a5df08d277c[] = {2, 0, 1};
static const uint16_t i_b95e9a5df08d277c[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b95e9a5df08d277c[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b95e9a5df08d277c = {
  0xb95e9a5df08d277c, b_b95e9a5df08d277c.words, 90, d_b95e9a5df08d277c, m_b95e9a5df08d277c,
  2, 3, i_b95e9a5df08d277c, nullptr, nullptr, { &s_b95e9a5df08d277c, nullptr, bd_b95e9a5df08d277c, 0, sizeof(bd_b95e9a5df08d277c) / sizeof(bd_b95e9a5df08d277c[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_a21731ff472a9631 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 150,  42,  71, 255,  49,  23, 162,
     40,   0,   0,   0,   1,   0,   1,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     73, 110, 116,  76, 105, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,  83, 117, 102, 102, 105, 120,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  83, 117, 102, 102, 105, 120,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     46, 244,  51,  56, 238, 149, 161, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    247,  35,  48, 254,  18, 106, 147, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a21731ff472a9631 = b_a21731ff472a9631.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a21731ff472a9631[] = {
  &s_8fa195ee3833f42e,
  &s_da936a12fe3023f7,
};
static const uint16_t m_a21731ff472a9631[] = {3, 2, 1, 0};
static const uint16_t i_a21731ff472a9631[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a21731ff472a9631 = {
  0xa21731ff472a9631, b_a21731ff472a9631.words, 80, d_a21731ff472a9631, m_a21731ff472a9631,
  2, 4, i_a21731ff472a9631, nullptr, nullptr, { &s_a21731ff472a9631, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_d6c567dfeede9b58 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88, 155, 222, 238, 223, 103, 197, 214,
     40,   0,   0,   0,   1,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     67,  97, 108, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108, 101, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d6c567dfeede9b58 = b_d6c567dfeede9b58.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d6c567dfeede9b58[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_d6c567dfeede9b58[] = {0, 1};
static const uint16_t i_d6c567dfeede9b58[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_d6c567dfeede9b58[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_d6c567dfeede9b58 = {
  0xd6c567dfeede9b58, b_d6c567dfeede9b58.words, 78, d_d6c567dfeede9b58, m_d6c567dfeede9b58,
  1, 2, i_d6c567dfeede9b58, nullptr, nullptr, { &s_d6c567dfeede9b58, nullptr, bd_d6c567dfeede9b58, 0, sizeof(bd_d6c567dfeede9b58) / sizeof(bd_d6c567dfeede9b58[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<96> b_a4d76185fab22f27 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     39,  47, 178, 250, 133,  97, 215, 164,
     40,   0,   0,   0,   1,   0,   1,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     77, 101, 109,  98, 101, 114,  67,  97,
    108, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
    105, 109, 112, 108, 105,  99, 105, 116,
     65, 114, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 114, 111, 119,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 155, 222, 238, 223, 103, 197, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 114, 103, 101, 116,  72,  97,
    115,  81, 117,  97, 108, 105, 102, 105,
    101, 114,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a4d76185fab22f27 = b_a4d76185fab22f27.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a4d76185fab22f27[] = {
  &s_d6c567dfeede9b58,
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_a4d76185fab22f27[] = {1, 2, 0, 3};
static const uint16_t i_a4d76185fab22f27[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_a4d76185fab22f27[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_a4d76185fab22f27 = {
  0xa4d76185fab22f27, b_a4d76185fab22f27.words, 96, d_a4d76185fab22f27, m_a4d76185fab22f27,
  2, 4, i_a4d76185fab22f27, nullptr, nullptr, { &s_a4d76185fab22f27, nullptr, bd_a4d76185fab22f27, 0, sizeof(bd_a4d76185fab22f27) / sizeof(bd_a4d76185fab22f27[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<93> b_ab509764d68e7721 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33, 119, 142, 214, 100, 151,  80, 171,
     40,   0,   0,   0,   1,   0,   1,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     77, 101, 109,  98, 101, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
     98,  97, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 114, 111, 119,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,  73, 115,  80, 111,
    105, 110, 116, 101, 114,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab509764d68e7721 = b_ab509764d68e7721.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ab509764d68e7721[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_ab509764d68e7721[] = {2, 0, 3, 1};
static const uint16_t i_ab509764d68e7721[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ab509764d68e7721[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ab509764d68e7721 = {
  0xab509764d68e7721, b_ab509764d68e7721.words, 93, d_ab509764d68e7721, m_ab509764d68e7721,
  1, 4, i_ab509764d68e7721, nullptr, nullptr, { &s_ab509764d68e7721, nullptr, bd_ab509764d68e7721, 0, sizeof(bd_ab509764d68e7721) / sizeof(bd_ab509764d68e7721[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_e0dbc3751d359960 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     96, 153,  53,  29, 117, 195, 219, 224,
     40,   0,   0,   0,   1,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     78, 101, 119,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0dbc3751d359960 = b_e0dbc3751d359960.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e0dbc3751d359960[] = {
  &s_e2a8b78aa50d684a,
  &s_f4d8929c89991d82,
};
static const uint16_t m_e0dbc3751d359960[] = {1, 0};
static const uint16_t i_e0dbc3751d359960[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_e0dbc3751d359960[] = {
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_e0dbc3751d359960 = {
  0xe0dbc3751d359960, b_e0dbc3751d359960.words, 62, d_e0dbc3751d359960, m_e0dbc3751d359960,
  2, 2, i_e0dbc3751d359960, nullptr, nullptr, { &s_e0dbc3751d359960, nullptr, bd_e0dbc3751d359960, 0, sizeof(bd_e0dbc3751d359960) / sizeof(bd_e0dbc3751d359960[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_9094c5b59016772f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47, 119,  22, 144, 181, 197, 148, 144,
     40,   0,   0,   0,   1,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     67, 111, 110, 115, 116, 114, 117,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9094c5b59016772f = b_9094c5b59016772f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9094c5b59016772f[] = {
  &s_e2a8b78aa50d684a,
  &s_f4d8929c89991d82,
};
static const uint16_t m_9094c5b59016772f[] = {1, 0, 2};
static const uint16_t i_9094c5b59016772f[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_9094c5b59016772f[] = {
  { 16777217,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_9094c5b59016772f = {
  0x9094c5b59016772f, b_9094c5b59016772f.words, 82, d_9094c5b59016772f, m_9094c5b59016772f,
  2, 3, i_9094c5b59016772f, nullptr, nullptr, { &s_9094c5b59016772f, nullptr, bd_9094c5b59016772f, 0, sizeof(bd_9094c5b59016772f) / sizeof(bd_9094c5b59016772f[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_a6587e392992550d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13,  85, 146,  41,  57, 126,  88, 166,
     40,   0,   0,   0,   1,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 120, 112, 114,  46,
     83, 116, 114, 117,  99, 116,  84, 111,
     83, 116, 114, 117,  99, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 112, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     98, 101, 200, 133, 204,   9, 208, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  29, 153, 137, 156, 146, 216, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6587e392992550d = b_a6587e392992550d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a6587e392992550d[] = {
  &s_e2a8b78aa50d684a,
  &s_f4d8929c89991d82,
};
static const uint16_t m_a6587e392992550d[] = {0, 1};
static const uint16_t i_a6587e392992550d[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_a6587e392992550d[] = {
  { 16777216,  ::stubs::Node< ::stubs::Expr>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_a6587e392992550d = {
  0xa6587e392992550d, b_a6587e392992550d.words, 63, d_a6587e392992550d, m_a6587e392992550d,
  2, 2, i_a6587e392992550d, nullptr, nullptr, { &s_a6587e392992550d, nullptr, bd_a6587e392992550d, 0, sizeof(bd_a6587e392992550d) / sizeof(bd_a6587e392992550d[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<73> b_ad2f528afe2c7941 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     65, 121,  44, 254, 138,  82,  47, 173,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  73, 110,  99, 108, 117,
    100, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     22, 122,  82, 235, 179,  67, 176, 152,
      1,   0,   0,   0,  98,   0,   0,   0,
     82, 101,  97, 108,  73, 110,  99, 108,
    117, 100, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 111, 110,  78, 111, 116,
     73, 110, 105, 116, 105,  97, 108, 105,
    122, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 108,  73, 110,  99, 108,
    117, 100, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     22, 122,  82, 235, 179,  67, 176, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 104, 111, 115, 116,  73, 110,  99,
    108, 117, 100, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad2f528afe2c7941 = b_ad2f528afe2c7941.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ad2f528afe2c7941[] = {
  &s_98b043b3eb527a16,
  &s_adb9aafdab430c1d,
};
static const uint16_t m_ad2f528afe2c7941[] = {2, 1, 0};
static const uint16_t i_ad2f528afe2c7941[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ad2f528afe2c7941 = {
  0xad2f528afe2c7941, b_ad2f528afe2c7941.words, 73, d_ad2f528afe2c7941, m_ad2f528afe2c7941,
  2, 3, i_ad2f528afe2c7941, nullptr, nullptr, { &s_ad2f528afe2c7941, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<103> b_98b043b3eb527a16 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     22, 122,  82, 235, 179,  67, 176, 152,
     43,   0,   0,   0,   1,   0,   1,   0,
     65, 121,  44, 254, 138,  82,  47, 173,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  73, 110,  99, 108, 117,
    100, 101,  46,  82, 101,  97, 108,  73,
    110,  99, 108, 117, 100, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 100,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     65, 121,  44, 254, 138,  82,  47, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  65, 110, 103, 108, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_98b043b3eb527a16 = b_98b043b3eb527a16.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_98b043b3eb527a16[] = {
  &s_ad2f528afe2c7941,
  &s_b1436df23fb200b4,
};
static const uint16_t m_98b043b3eb527a16[] = {2, 1, 3, 4, 0};
static const uint16_t i_98b043b3eb527a16[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_98b043b3eb527a16 = {
  0x98b043b3eb527a16, b_98b043b3eb527a16.words, 103, d_98b043b3eb527a16, m_98b043b3eb527a16,
  2, 5, i_98b043b3eb527a16, nullptr, nullptr, { &s_98b043b3eb527a16, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<80> b_8ae30723c7f4eeb7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    183, 238, 244, 199,  35,   7, 227, 138,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  70, 105, 108, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    102, 100,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 108, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     74, 104,  13, 165, 138, 183, 168, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     56,  41, 226,  36, 134, 127, 108, 217,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8ae30723c7f4eeb7 = b_8ae30723c7f4eeb7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8ae30723c7f4eeb7[] = {
  &s_e2a8b78aa50d684a,
};
static const uint16_t m_8ae30723c7f4eeb7[] = {2, 0, 1};
static const uint16_t i_8ae30723c7f4eeb7[] = {0, 1, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8ae30723c7f4eeb7[] = {
  { 16777218,  ::stubs::Node< ::stubs::Decl>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8ae30723c7f4eeb7 = {
  0x8ae30723c7f4eeb7, b_8ae30723c7f4eeb7.words, 80, d_8ae30723c7f4eeb7, m_8ae30723c7f4eeb7,
  1, 3, i_8ae30723c7f4eeb7, nullptr, nullptr, { &s_8ae30723c7f4eeb7, nullptr, bd_8ae30723c7f4eeb7, 0, sizeof(bd_8ae30723c7f4eeb7) / sizeof(bd_8ae30723c7f4eeb7[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<93> b_c63033d95787d2ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255, 210, 135,  87, 217,  51,  48, 198,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  84,  85,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 105, 110,  70, 100,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 108, 117, 100, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     65, 121,  44, 254, 138,  82,  47, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    183, 238, 244, 199,  35,   7, 227, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 105, 108,  68, 105, 114, 101,
     99, 116, 105, 118, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  12,  67, 171, 253, 170, 185, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c63033d95787d2ff = b_c63033d95787d2ff.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c63033d95787d2ff[] = {
  &s_8ae30723c7f4eeb7,
  &s_ad2f528afe2c7941,
  &s_adb9aafdab430c1d,
};
static const uint16_t m_c63033d95787d2ff[] = {3, 2, 1, 0};
static const uint16_t i_c63033d95787d2ff[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c63033d95787d2ff = {
  0xc63033d95787d2ff, b_c63033d95787d2ff.words, 93, d_c63033d95787d2ff, m_c63033d95787d2ff,
  3, 4, i_c63033d95787d2ff, nullptr, nullptr, { &s_c63033d95787d2ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_9162b284a3cba818 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 168, 203, 163, 132, 178,  98, 145,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  69, 114, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,   0, 178,  63, 242, 109,  67, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 115, 111, 110,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9162b284a3cba818 = b_9162b284a3cba818.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9162b284a3cba818[] = {
  &s_b1436df23fb200b4,
};
static const uint16_t m_9162b284a3cba818[] = {0, 1};
static const uint16_t i_9162b284a3cba818[] = {0, 1};
const ::capnp::_::RawSchema s_9162b284a3cba818 = {
  0x9162b284a3cba818, b_9162b284a3cba818.words, 49, d_9162b284a3cba818, m_9162b284a3cba818,
  1, 2, i_9162b284a3cba818, nullptr, nullptr, { &s_9162b284a3cba818, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_a924c04c2f68f445 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69, 244, 104,  47,  76, 192,  36, 169,
     35,   0,   0,   0,   1,   0,   0,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  86, 102,  69, 114, 114,
    111, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    116, 117,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 210, 135,  87, 217,  51,  48, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 111, 114, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     24, 168, 203, 163, 132, 178,  98, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a924c04c2f68f445 = b_a924c04c2f68f445.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a924c04c2f68f445[] = {
  &s_9162b284a3cba818,
  &s_c63033d95787d2ff,
};
static const uint16_t m_a924c04c2f68f445[] = {1, 0};
static const uint16_t i_a924c04c2f68f445[] = {0, 1};
const ::capnp::_::RawSchema s_a924c04c2f68f445 = {
  0xa924c04c2f68f445, b_a924c04c2f68f445.words, 54, d_a924c04c2f68f445, m_a924c04c2f68f445,
  2, 2, i_a924c04c2f68f445, nullptr, nullptr, { &s_a924c04c2f68f445, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_a5cc2b3709c2654d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     77, 101, 194,   9,  55,  43, 204, 165,
     35,   0,   0,   0,   1,   0,   1,   0,
     34,  18, 214,  60, 174, 141,  74, 219,
      1,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 120, 120,  95, 102, 114, 111, 110,
    116, 101, 110, 100,  47, 115, 116, 117,
     98, 115,  47, 115, 116, 117,  98, 115,
     95,  97, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 114,  82, 101,
    115, 117, 108, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 210, 135,  87, 217,  51,  48, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108,  97, 110, 103,  69, 114, 114,
    111, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 102,  69, 114, 114, 111, 114,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     69, 244, 104,  47,  76, 192,  36, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5cc2b3709c2654d = b_a5cc2b3709c2654d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a5cc2b3709c2654d[] = {
  &s_a924c04c2f68f445,
  &s_c63033d95787d2ff,
};
static const uint16_t m_a5cc2b3709c2654d[] = {1, 0, 2};
static const uint16_t i_a5cc2b3709c2654d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a5cc2b3709c2654d = {
  0xa5cc2b3709c2654d, b_a5cc2b3709c2654d.words, 66, d_a5cc2b3709c2654d, m_a5cc2b3709c2654d,
  2, 3, i_a5cc2b3709c2654d, nullptr, nullptr, { &s_a5cc2b3709c2654d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace stubs {

// Loc
constexpr uint16_t Loc::_capnpPrivate::dataWordSize;
constexpr uint16_t Loc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Loc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Loc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Loc::SrcPos
constexpr uint16_t Loc::SrcPos::_capnpPrivate::dataWordSize;
constexpr uint16_t Loc::SrcPos::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Loc::SrcPos::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Loc::SrcPos::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Clause
constexpr uint16_t Clause::_capnpPrivate::dataWordSize;
constexpr uint16_t Clause::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Clause::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Clause::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RecordRef
constexpr uint16_t RecordRef::_capnpPrivate::dataWordSize;
constexpr uint16_t RecordRef::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RecordRef::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RecordRef::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Param
constexpr uint16_t Param::_capnpPrivate::dataWordSize;
constexpr uint16_t Param::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Param::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Param::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Type
constexpr uint16_t Type::_capnpPrivate::dataWordSize;
constexpr uint16_t Type::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Type::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Type::FixedWidth
constexpr uint16_t Type::FixedWidth::_capnpPrivate::dataWordSize;
constexpr uint16_t Type::FixedWidth::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Type::FixedWidth::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Type::FixedWidth::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Type::FunctionProto
constexpr uint16_t Type::FunctionProto::_capnpPrivate::dataWordSize;
constexpr uint16_t Type::FunctionProto::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Type::FunctionProto::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Type::FunctionProto::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt
constexpr uint16_t Stmt::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::Return
constexpr uint16_t Stmt::Return::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::Return::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::Return::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::Return::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::If
constexpr uint16_t Stmt::If::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::If::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::If::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::If::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::Compound
constexpr uint16_t Stmt::Compound::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::Compound::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::Compound::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::Compound::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::While
constexpr uint16_t Stmt::While::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::While::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::While::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::While::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::Case
constexpr uint16_t Stmt::Case::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::Case::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::Case::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::Case::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::DefCase
constexpr uint16_t Stmt::DefCase::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::DefCase::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::DefCase::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::DefCase::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Stmt::Switch
constexpr uint16_t Stmt::Switch::_capnpPrivate::dataWordSize;
constexpr uint16_t Stmt::Switch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Stmt::Switch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Stmt::Switch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl
constexpr uint16_t Decl::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Var
constexpr uint16_t Decl::Var::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Var::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Var::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Var::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Var::VarInit
constexpr uint16_t Decl::Var::VarInit::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Var::VarInit::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Var::VarInit::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Var::VarInit::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Function
constexpr uint16_t Decl::Function::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Function::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Function::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Function::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Field
constexpr uint16_t Decl::Field::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Field::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Field::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Field::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Field::FieldInit
constexpr uint16_t Decl::Field::FieldInit::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Field::FieldInit::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Field::FieldInit::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Field::FieldInit::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Record
constexpr uint16_t Decl::Record::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Record::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Record::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Record::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Record::BaseSpec
constexpr uint16_t Decl::Record::BaseSpec::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Record::BaseSpec::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Record::BaseSpec::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Record::BaseSpec::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Record::Body
constexpr uint16_t Decl::Record::Body::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Record::Body::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Record::Body::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Record::Body::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Method
constexpr uint16_t Decl::Method::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Method::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Method::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Method::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Method::Override
constexpr uint16_t Decl::Method::Override::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Method::Override::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Method::Override::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Method::Override::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Ctor
constexpr uint16_t Decl::Ctor::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Ctor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Ctor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Ctor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Ctor::CtorInit
constexpr uint16_t Decl::Ctor::CtorInit::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Ctor::CtorInit::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Ctor::CtorInit::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Ctor::CtorInit::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Dtor
constexpr uint16_t Decl::Dtor::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Dtor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Dtor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Dtor::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Typedef
constexpr uint16_t Decl::Typedef::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Typedef::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Typedef::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Typedef::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Enum
constexpr uint16_t Decl::Enum::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Enum::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Enum::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Enum::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Enum::EnumField
constexpr uint16_t Decl::Enum::EnumField::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Enum::EnumField::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Enum::EnumField::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Enum::EnumField::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::Namespace
constexpr uint16_t Decl::Namespace::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::Namespace::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::Namespace::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::Namespace::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Decl::FunctionTemplate
constexpr uint16_t Decl::FunctionTemplate::_capnpPrivate::dataWordSize;
constexpr uint16_t Decl::FunctionTemplate::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Decl::FunctionTemplate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Decl::FunctionTemplate::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr
constexpr uint16_t Expr::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::UnaryOp
constexpr uint16_t Expr::UnaryOp::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::UnaryOp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::UnaryOp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::UnaryOp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::BinaryOp
constexpr uint16_t Expr::BinaryOp::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::BinaryOp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::BinaryOp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::BinaryOp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::IntLit
constexpr uint16_t Expr::IntLit::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::IntLit::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::IntLit::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::IntLit::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::Call
constexpr uint16_t Expr::Call::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::Call::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::Call::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::Call::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::MemberCall
constexpr uint16_t Expr::MemberCall::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::MemberCall::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::MemberCall::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::MemberCall::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::Member
constexpr uint16_t Expr::Member::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::Member::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::Member::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::Member::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::New
constexpr uint16_t Expr::New::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::New::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::New::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::New::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::Construct
constexpr uint16_t Expr::Construct::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::Construct::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::Construct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::Construct::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Expr::StructToStruct
constexpr uint16_t Expr::StructToStruct::_capnpPrivate::dataWordSize;
constexpr uint16_t Expr::StructToStruct::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Expr::StructToStruct::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Expr::StructToStruct::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Include
constexpr uint16_t Include::_capnpPrivate::dataWordSize;
constexpr uint16_t Include::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Include::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Include::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Include::RealInclude
constexpr uint16_t Include::RealInclude::_capnpPrivate::dataWordSize;
constexpr uint16_t Include::RealInclude::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Include::RealInclude::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Include::RealInclude::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// File
constexpr uint16_t File::_capnpPrivate::dataWordSize;
constexpr uint16_t File::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind File::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* File::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TU
constexpr uint16_t TU::_capnpPrivate::dataWordSize;
constexpr uint16_t TU::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TU::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TU::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Err
constexpr uint16_t Err::_capnpPrivate::dataWordSize;
constexpr uint16_t Err::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Err::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Err::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VfError
constexpr uint16_t VfError::_capnpPrivate::dataWordSize;
constexpr uint16_t VfError::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VfError::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VfError::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SerResult
constexpr uint16_t SerResult::_capnpPrivate::dataWordSize;
constexpr uint16_t SerResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SerResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SerResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

